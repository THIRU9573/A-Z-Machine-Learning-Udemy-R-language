print("hello world")
print(hello)
search()
installed.packages()
install.packages("gmodels")
require(gmodels)
search()
install.packages("tm")
library(tm)
search()
detach(package:NLP)
library(help = "NLP")
q()
#Data preprocessing
#Importing the data
data = read.csv('C:/Users/thiru/Downloads/Data (2).csv')
view(data)
installed.packages()
install.packages(view)
install.packages("view")
view(data)
for (x in 1:10){
print(x)
}
for (x in 1:11){
x
}
name <- "thirupathi"
location <- "rampoor"
name
location
print(name)
paste(name,location)
# for text concatination use paste() function
text <- "awesome"
paste("R is", text) 
For numbers, the + character works as a mathematical operator:
#For numbers, the + character works as a mathematical operator:
num <- 5
num2 <- 20
num + num2
#If you try to combine a string (text) and a number, R will give you an error:
num <- 5
text <- "some text"
num + text
save.image("C:\\Users\\thiru\\OneDrive\\Documents\\demo1 of R.RData")
#R allows you to assign the same value to multiple variables in one line:
var1 <- var2 <- var3 <- "Orange"
var1
var2
var3
#Basic Data Types
#We can use the class() function to check the data type of a variable:
x <- 10.5
class(x)
x <- 1000L
class(x)
x <- 9i+3
class(x)
x <- "R is Exciting"
class(x)
q()
load("C:\\Users\\thiru\\OneDrive\\Documents\\demo1 of R.RData")
#Type conversion
#You can convert from one type to another with the following functions:
as.numeric()
as.integer()
as.complex()
x <- 1L
y <- 2
a <- as.numeric(x)
b <- as.integer(y)
x
y
class(a)
class(b)
min(5,10,15)
max(5,10,15)
sqrt(5)
sqrt(16)
abs(-4.5)
ceiling(1.4)
floor(1.4)
str <- "Hello"
str
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
str
str <- "Lorem ipsum dolor sit amet,
+ consectetur adipiscing elit,
+ sed do eiusmod tempor incididunt
+ ut labore et dolore magna aliqua."
cat(str)
# String Length
#use nchar() function
str <- "Hello World!"
nchar(str)
#check a String
#Use the grepl() function to check if a character or sequence of character are preset in a string:
str <- "Hello World"
grepl("H", str)
grepl("Hello",str)
grepl("x",str)
#Combine Two Strings
Use the paste()function to merge/concatenate two strings:
str1 <- "my country is"
str2 <- "INDIA"
paste(str1,str2)
#Escape Characters
str <- "We are the so called "Vikings",from the north
str
str <- "We are the so called "Vikings",from the north
#To Fix this problem ,use the escape character \"
str <- "We are the so called \"Vikings\",from the north
."
str
cat(str)
a <- 10
b <- 9
a > b
#if statement.
a <- 200
b <- 33
if (a > b){
print("b is greater than a")
}else{
print(" b is not greater than a")
}
a <- 10
b <- 10
if (a==b){
print("a equal to b")
}else{
print("a not equal to b")
}
a <- 10
b <- 5
a+b
a-b
a*b
a/b
a <- 5
b <- 2
a^b
a%/%b
a%%b
x <- 1:10
x
a <- 33
b <- 33
if (b>a){
print("b is greater than a")
}else if (a==b){
print("a and b are equal")
}
x <- 41
if (x>10) {
print(x>20){
x<- 41
if (x>10){
print("Above ten")
if (x >20){
print("and also above 20!")
}else{
print("but not above 20.")
}
}else{
print("below 10.")
}
a <- 200
b <- 33
c <- 500
if (a > b & c > a) {
  print("Both conditions are true")
}
a <- 200
b <- 33
c <- 500
if (a > b | a > c) {
  print("At least one of the conditions is true")
}
# while loops
# for loops
i <- 1
while (i < 6){
print(i)
i <- i+1
}
#break
i <- 1
while (i < 6){
print(i)
i<-i+1
if (i==4){
break
}
}
i <- 0
while (i < 6) {
  i <- i + 1
  if (i == 3) {
    next
  }
  print(i)
}
dice <- 1
while (dice <= 6) {
  if (dice < 6) {
    print("No Yahtzee")
  } else {
    print("Yahtzee!")
  }
  dice <- dice + 1
}
save.image("C:\\Users\\thiru\\OneDrive\\Documents\\demo2 R.RData")
for (x in 1:10) {
  print(x)
}
#for loop
fruits <- list("apple", "banana", "cherry")
for (x in fruits) {
  print(x)
}
dice <- c(1, 2, 3, 4, 5, 6)
for (x in dice) {
  print(x)
}
#BREAK
fruits <- list("apple", "banana", "cherry")
for (x in fruits) {
  if (x == "cherry") {
    break
  }
  print(x)
}
#next
fruits <- list("apple", "banana", "cherry")
for (x in fruits) {
  if (x == "banana") {
    next
  }
  print(x)
}
dice <- 1:6
for(x in dice) {
  if (x == 6) {
    print(paste("The dice number is", x, "Yahtzee!"))
  } else {
    print(paste("The dice number is", x, "Not Yahtzee"))
  }
}
#Nested Loops
adj <- list("red", "big", "tasty")
fruits <- list("apple", "banana", "cherry")
  for (x in adj) {
    for (y in fruits) {
      print(paste(x, y))
  }
}
q()
 data = read.csv("C:/data Science/Machine Learning-A-Z-Codes-Datasets/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 4 - Simple Linear Regression/R/Salary_Data.csv")
 data = read.csv("C:/data Science/Machine Learning-A-Z-Codes-Datasets/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 4 - Simple Linear Regression/R/Salary_Data.csv")
data
str(data)
summary(data)
fix(data)
x <-runif(5)
set.seed(123)
x <-runif(5)
x
set.seed()
x <-runif(5)
set.seed(1)
x <-runif(5)
x
set.seed(123)
split = sample.split.(data$Salary,SplitRatio = 2/3)
training_set = subset(data, split == True)
test_set = subset(data, split == False)
set.seed(123)
split = sample.split(data$Salary,SplitRatio = 2/3)
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(data$Salary,SplitRatio = 2/3)
training_set = subset(data, split == True)
training_set = subset(data, split == TRUE)
test_set = subset(data, split == FALSE)
q()
data = read.csv("C:/data Science/Machine Learning-A-Z-Codes-Datasets/Machine Learning A-Z (Codes and Datasets)/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/R/Data.csv")
data
